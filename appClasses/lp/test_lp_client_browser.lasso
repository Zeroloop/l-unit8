<?lassoscriptdefine_type('test_lp_client_tags', 'unit_testCase');//============================================================================////		->	Setup////............................................................................	define_tag:'setup';		//	All tags & types must at least be defined in the page namespace 		//	Types can also be cast as variables to be used.		namespace_using:namespace_page;					//	Load any required tags here			include:'/appClasses/lp/lp_client_browser.lasso';			include:'/appClasses/lp/lp_client_isBot.lasso';		/namespace_using;	/define_tag;//============================================================================////		->	Tests to run////............................................................................	define_tag:'test_isBot';		//{lp_client_isBot(-user_agent='Googlebot') == true}			//{isTrue:lp_client_isBot(-user_agent='Googlebot')}			self->assert_isTrue(lp_client_isBot(-user_agent='Googlebot'));		self->assert_isFalse(			lp_client_isBot(-user_agent='Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Firefox/3.0.1')		);	/define_tag;	define_tag:'test_OS_detection';				//{lp_client_browser(-lp_client_browser='Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Firefox/3.0.1')->find('os') == 'windows'}					self->assert_isTrue(			lp_client_browser(				-user_agent='Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Firefox/3.0.1'			)->find('os') == 'Windows' 		);	/define_tag;	define_tag:'test_Browser_detection';		//{lp_client_browser(-lp_client_browser='Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Firefox/3.0.1')->find('browser') == 'firefox'}					self->assert_isTrue(			"lp_client_browser(				-user_agent='Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Firefox/3.0.1'			)->find('browser') == 'Firefox' " 		);	/define_tag;	/define_type;?>