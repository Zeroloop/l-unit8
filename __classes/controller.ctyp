<?LassoScript define_type:'controller',-prototype;		local(		'var'			= '_unit_controller',		'global'		= '_unit_testSuites',		'output' 	= array,		'errors'	= array,		'html'		= code(							'home'		= unit_htmlPath'home.htm',							'suiteList' 	= unit_htmlPath'suiteList.htm'						)  	);	define_tag:'onCreate';			//	One controller per thread		var_defined(self->var)		?	return:@var(self->var)		|	var(self->var) = @self;		//	Determine current mode		protect;			select: client_getParams('unit_mode');				case:'unitTest';						case:'unitTagTest';					//	Initialise Tag Test														case:'unitThreads';					//					case;	//	suiteManager					self->output(unit_testSuite);					/select;		/protect;		unit_isAjax		?	return:	self->content 		|	return:	process(self->html->home);			/define_tag;	define_tag:'error',-optional='error';		local('error')		?	self->'errors'->insert(local('error'));	/define_tag;	define_tag:'output',-optional='content';		self->'output'->insert(@#content);			/define_tag;	define_tag:'content';		local('content') = string;		iterate:self->'output',local('output');			#content += #output->invoke;		/iterate;		return:@#content;	/define_tag;		define_tag:'suiteList';		return:process(self->html->suiteList);	/define_tag;	define_tag:'suiteFiles';			local('suiteFiles') = array;		inline:			-username 	= unit_filesUser,			-password 		= unit_filesPswd;					iterate:file_listDirectory(unit_suitesPath),local('fileName');				!	string(#fileName)->beginsWith('.')				?	#suiteFiles->insert(#filename);			/iterate;			/inline;					return:#suiteFiles;		/define_tag; /*		Global TestSuite Controls
|___________________________________________________________________*/	define_tag:'global';		//	Global for running testSuites		!	global(self->'global')->isA('map')		?	global(self->'global') = map;		return:@global(self->'global');	/define_tag;	define_tag:'start',		-required = 'testSuite',-type='testSuite';					debug:'Controller > Start',-open,-title;
		handle_error;debug(error_msg,-error);/handle_error;
		handle;debug(-close);/handle;		debug:#testSuite->suiteName;		self->global->insert(#testSuite->suiteName=@#testSuite);	/define_tag;	define_tag:'reset',		-optional = 'suiteName';				if:local('suiteName');			protect;self->get(#suiteName)->abort;/protect;			self->remove(#suiteName);		else;			iterate:self->global->keys,local('suiteName');				protect;self->get(#suiteName)->abort;/protect;				self->remove(#suiteName);			/iterate;		/if;	/define_tag;		define_tag:'get',		-required = 'suiteName',-type='string';		return:@self->global->find(#suiteName);	/define_tag;	define_tag:'remove',		-required = 'suiteName',-type='string';		return:@self->global->remove(#suiteName);	/define_tag;	define_tag:'exists',		-required = 'suiteName',-type='string';		return:self->global >> #suiteName; 	/define_tag;	define_tag:'isRunning',		-required = 'suiteName',-type='string';		self->global >> #suiteName 		?	return:@self->global->find(#suiteName)->isRunning 		|	return:false;	/define_tag;/define_type;	?>